name: Deploy to Cloud Run
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Build and push Docker image to Google Container Registry
        id: build-image
        env:
          GCR_REGISTRY: gcr.io
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo ${{ secrets.GCP_SA_KEY }} | base64 --decode > key.json
          docker build -t $GCR_REGISTRY/$GCP_PROJECT_ID/app-google:$IMAGE_TAG .
          docker tag $GCR_REGISTRY/$GCP_PROJECT_ID/app-google:$IMAGE_TAG $GCR_REGISTRY/$GCP_PROJECT_ID/app-google:latest
          docker push $GCR_REGISTRY/$GCP_PROJECT_ID/app-google:$IMAGE_TAG
          docker push $GCR_REGISTRY/$GCP_PROJECT_ID/app-google:latest
          echo "::set-output name=image::$GCR_REGISTRY/$GCP_PROJECT_ID/app-google:$IMAGE_TAG"

      - name: Deploy to Cloud Run
        id: deploy-cloudrun
        uses: google-github-actions/deploy-cloudrun@main
        with:
          image: ${{ steps.build-image.outputs.image }}
          service: app-google
          region: us-central1
          platform: managed
          memory: 512Mi
          concurrency: 80
          max-instances: 1
          allow-unauthenticated: true

      - name: Cloud Run output
        run: echo 'Cloud Run URL: ${{ steps.deploy-cloudrun.outputs.url }}'